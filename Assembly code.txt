.INCLUDE "M32DEF.INC"     


.EQU  GUI=PORTB3   
.EQU  GUIM=PORTB2   
.EQU  BUTT=PORTB4       
.EQU  TRIG=PORTB0       
.EQU  ECHO=PORTB1       
.EQU  BDV10usCNT=1      
.EQU  WDV50msCNT=10415  
.EQU  BDV1cmCNT=19      
.EQU  BDV2mmCNT=6      

   .DEF A = R16            
   .DEF BDV = R17          
   .DEF CNT = R18          
                           
                           
.DEF DTEST=R19          
                        
.DEF DRNG1=R20          
                           
.DEF DRNG2=R21          

.ORG 0000
RJMP  ON_RESET       


ON_RESET:
ldi	A, low(RAMEND)	
out	SPL,A

ldi   A, (1<<GUI) | (1<<GUIM) | (1<<TRIG)
out   DDRB, A        
sbi   PORTB, BUTT    
cbi   PORTB, ECHO    
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x8c2	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x82e	
jmp	0x114	
jmp	0x7ca	
jmp	0x77e	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	
jmp	0x114	


nop
nop
nop
nop

;digital_pin_to_timer_PGM:

nop
sbc	r0,r0
muls	r16,r16
mulsu	r16,r16
cpc	r16,r20
nop
nop
nop
nop

;port_to_input_PGM:

nop
nop

;digital_pin_to_port_PGM:

cpc	r0,r4
cpc	r0,r4
cpc	r0,r4
cpc	r0,r4
muls	r16,r18
muls	r16,r18
muls	r16,r18
mulsu	r16,r19
mulsu	r16,r19
mulsu	r16,r19

;digital_pin_to_bit_mask_PGM:

muls	r16,r17
sbc	r0,r4
and	r1,r0
ld	r4,Z
muls	r16,r17
sbc	r0,r4
and	r1,r0
muls	r16,r17
sbc	r0,r4
and	r1,r0

cpc	r22,r7

eor	r1,r1
out	0x3f,r1	
ldi	r28,0xFF	
ldi	r29,0x08	
out	0x3e,r29	
out	0x3d,r28	

;do_copy_data:

ldi	r17,0x01	
ldi	r26,0x00	
ldi	r27,0x01	
ldi	r30,0xE8	
ldi	r31,0x10	
lpm	r0,Z+
st	X+,r0
cpi	r26,0x1A	
cpc	r27,r17	

;do_clear_bss:

ldi	r18,0x01	
ldi	r26,0x1A	
ldi	r27,0x01	



;do_clear_bss_loop:

st	X+,r1

;do_clear_bss_start:

cpi	r26,0xF9	
cpc	r27,r18


;do_global_ctors:

ldi	r17,0x00	
ldi	r28,0x62	
ldi	r29,0x00	
sbiw	r28,0x01	
movw	r30,r28
call	0x10ce	
cpi	r28,0x61	
cpc	r29,r17
call	0xb8a	
jmp	0x10e4	
jmp	0	

;ZN5Servo5writeEi.constprop.4:

push	r12
push	r13
push	r14
push	r15
movw	r26,r24
cpi	r26,0x20	
ldi	r24,0x02	
cpc	r27,r24
sbrc	r27,7
cpi	r26,0xB5	
cpc	r27,r1
ldi	r26,0xB4	
ldi	r27,0x00	
ldi	r26,0x00	
ldi	r27,0x00	
lds	r24,0x01F7
ldi	r18,0x88	
ldi	r19,0x00	
movw	r12,r18
sub	r12,r24
sbc	r13,r1
sbrc	r24,7
inc	r13
add	r12,r12
adc	r13,r13
add	r12,r12
adc	r13,r13
mov	r0,r13
add	r0,r0
sbc	r14,r14
sbc	r15,r15
lds	r24,0x01F8
ldi	r18,0x58	
ldi	r19,0x02	
sub	r18,r24
sbc	r19,r1
inc	r19
add	r18,r18
adc	r19,r19
add	r18,r18
adc	r19,r19
movw	r20,r18
add	r19,r19
sbc	r22,r22
sbc	r23,r23
movw	r18,r20
movw	r20,r22
sub	r18,r12
sbc	r19,r13
sbc	r20,r14
sbc	r21,r15
call	0xff4
ldi	r18,0xB4
ldi	r19,0x00
ldi	r20,0x00
ldi	r21,0x00
call	0xfa0	
add	r12,r18
adc	r13,r19
adc	r14,r20
adc	r15,r21
movw	r26,r12
lds	r25,0x01F6
cpi	r25,0x0C
lds	r24,0x01F7
ldi	r20,0x88
ldi	r21,0x00
sub	r20,r24
sbc	r21,r1
sbrc	r24,7
inc	r21
add	r20,r20
adc	r21,r21
add	r20,r20
adc	r21,r21
cp	r26,r20
cpc	r27,r21
lds	r24,0x01F8
ldi	r18,0x58
ldi	r19,0x02
sub	r18,r24
sbc	r19,r1
sbrc	r24,7
inc	r19
add	r18,r18
adc	r19,r19
add	r18,r18
adc	r19,r19
movw	r20,r26
cpc	r18,r26
cpc	r19,r27
movw	r20,r18
subi	r20,0x02
sbc	r21,r1
add	r20,r20
adc	r21,r21
in	r18,0x3f
mov	r24,r25
ldi	r25,0x00
movw	r30,r24
add	r30,r30
adc	r31,r31
add	r24,r30
adc	r25,r31
movw	r30,r24
subi	r30,0x2F
sbci	r31,0xFE
std	Z+2,r21	
std	Z+1,r20	
out	0x3f,r18	
pop	r15
pop	r14
pop	r13
pop	r12
ret
push	r12
push	r13
push	r14
push	r15
push	r16
push	r17
push	r28
push	r29
movw	r12,r24
movw	r14,r20
movw	r16,r22
ldi	r28,0x00
ldi	r29,0x00
cpc	r28,r14
cpc	r29,r15
movw	r26,r16
movw	r16,r26
movw	r26,r12
movw	r24,r12
or	r24,r25
movw	r14,r28
adiw	r28,0x01	
movw	r24,r14
pop	r29
pop	r28
pop	r17
pop	r16
pop	r15
pop	r14
pop	r13
pop	r12
ret

;Print5flushEv:

ret

;Print17availableForWriteEv:

ldi	r24,0x00	
ldi	r25,0x00	
ret

;HardwareSerial17availableForWriteEv:

movw	r30,r24
ldd	r21,Z+27	
ldd	r20,Z+28	
mov	r18,r21
ldi	r19,0x00	
mov	r24,r20
ldi	r25,0x00	
sub	r24,r18
sbc	r25,r19
cpc	r21,r20
adiw	r24,0x3f	
ret
sbiw	r24,0x01	
ret

;HardwareSerial4readEv:

movw	r30,r24
ldd	r25,Z+25
ldd	r24,Z+26
cp	r25,r24
ldd	r24,Z+26
movw	r26,r30
add	r26,r24
adc	r27,r1
adiw	r26,0x1d	
ld	r24,X
ldd	r25,Z+26	
subi	r25,0xFF	
andi	r25,0x3F	
std	Z+26,r25	
ldi	r25,0x00	
ret
ldi	r24,0xFF	
ldi	r25,0xFF	
ret

;HardwareSerial4peekEv:

movw	r30,r24
ldd	r25,Z+25	
ldd	r24,Z+26	
cpc	r25,r24
ldd	r24,Z+26	
add	r30,r24
adc	r31,r1
ldd	r24,Z+29	
ldi	r25,0x00	
ret
ldi	r24,0xFF	
ldi	r25,0xFF	
ret

;HardwareSerial9availableEv:

movw	r30,r24
ldd	r25,Z+25	
ldd	r18,Z+26	
mov	r24,r25
ldi	r25,0x00	
subi	r24,0xC0	
sbci	r25,0xFF	
sub	r24,r18
sbc	r25,r1
andi	r24,0x3F	
ret

;Serial0_availablev:

ldi	r24,0x34	
ldi	r25,0x01	
call	0x2e0	

;HardwareSerial9availableEv

ldi	r18,0x01	
or	r24,r25
ldi	r18,0x00
mov	r24,r18
ret

;HardwareSerial17_tx_udr_empty_irqEv:

movw	r30,r24
ldd	r24,Z+28	
movw	r26,r30
add	r26,r24
adc	r27,r1
subi	r26,0xA3
sbci	r27,0xFF
ldd	r24,Z+28
ldi	r25,0x00
adiw	r24,0x01
andi	r24,0x3F
eor	r25,r25
std	Z+28,r24
ldd	r26,Z+22
ldd	r27,Z+23
st	X,r18
ldd	r26,Z+16
ldd	r27,Z+17
ld	r24,X
st	X,r24
ldd	r25,Z+27
ldd	r24,Z+28
cpse	r25,r24
ldd	r0,Z+18	
ldd	r31,Z+19
mov	r30,r0
ret

;HardwareSerial5writeEh:

push	r14
push	r15
push	r16
push	r17
push	r28
push	r29
movw	r28,r24
ldi	r24,0x01	
std	Y+24,r24
ldd	r25,Y+27
ldd	r24,Y+28
cpse	r25,r24
ldd	r30,Y+16
ldd	r31,Y+17
sbrc	r24,5
mov	r15,r22
ldd	r16,Y+27
ldi	r17,0x00
subi	r16,0xFF
sbci	r17,0xFF
andi	r16,0x3F
eor	r17,r17
mov	r14,r16
ldd	r24,Y+28
cpse	r14,r24
in	r0,0x3f	
ldd	r30,Y+16
ldd	r31,Y+17
ld	r24,Z
sbrs	r24,5
movw	r24,r28
call	0x30c	

;HardwareSerial17_tx_udr_empty_irqEv

ldd	r24,Y+27
movw	r30,r28
add	r30,r24
adc	r31,r1
subi	r30,0xA3
sbci	r31,0xFF
st	Z,r15
std	Y+27,r16
ldd	r30,Y+18
ldd	r31,Y+19
ld	r24,Z
ldd	r30,Y+16
ldi	r24,0x01	
ldi	r25,0x00	
pop	r29
pop	r28
pop	r17
pop	r16
pop	r15
pop	r14
ret

;HardwareSerial5flushEv:

push	r28
push	r29
movw	r28,r24
ldd	r24,Y+24	
and	r24,r24
ldd	r30,Y+18
ldd	r31,Y+19
ldd	r27,Y+17
sbrc	r24,6



;USER_SIGNATURE_REGION_LENGTH__:

sbrs	r24,5
ldd	r26,Y+16
sbrs	r24,5
movw	r24,r28


;HardwareSerial17_tx_udr_empty_irqEv

pop	r29
pop	r28
ret

;serialEventRunv:

ldi	r24,0x00	
ldi	r25,0x00	
or	r24,r25
call	0x2f8	

;Serial0_availablev

cpse	r24,r1
ret

;digitalWrite:

ldi	r25,0x00	
movw	r30,r24
subi	r30,0x84
sbci	r31,0xFF
lpm	r19,Z
movw	r30,r24
subi	r30,0x52
sbci	r31,0xFF
lpm	r18,Z
movw	r30,r24
subi	r30,0x66
sbci	r31,0xFF
lpm	r30,Z
and	r30,r30
and	r19,r19
cpi	r19,0x03
cpi	r19,0x01
cpi	r19,0x02
in	r24,0x24
andi	r24,0xDF
cpi	r19,0x07
cpi	r19,0x08
cpi	r19,0x04
lds	r24,0x0080
andi	r24,0xDF
lds	r24,0x0080
andi	r24,0x7F
sts	0x0080,r24
in	r24,0x24
andi	r24,0x7F
out	0x24,r24
lds	r24,0x00B0
andi	r24,0x7F
lds	r24,0x00B0
andi	r24,0xDF
sts	0x00B0,r24
ldi	r31,0x00
add	r30,r30
adc	r31,r31
subi	r30,0x8E
sbci	r31,0xFF
lpm	r26,Z+
lpm	r27,Z
in	r24,0x3f
cli
ld	r30,X
cpse	r22,r1


and	r18,r30
or	r18,r30
st	X,r18
out	0x3f,r24
ret


;   rcall WAIT4BUTTON
   
	MAIN_LOOP:
      rcall ONTRIG            
      ldi   BDV, BDV10usCNT   
      rcall BDELAY            
      rcall OFFTRIG           

      rcall WAIT4ONECHO    
      rcall GETECHOPULSE   
                           
                           
                           

      tst   CNT            
      breq  NOOBJECT
      rcall ONGUI     

      ldi   DRNG1,30
      ldi   DRNG2,31
      rcall DBETWEEN       
      tst   DTEST          
      breq  NOTNEARER
      rcall ONGUIM
      rjmp  MAINWAIT
NOTNEARER:
      rcall OFFGUIM
      rjmp  MAINWAIT


   NOOBJECT:
      rcall OFFGUI          
      rcall OFFGUIM          

   MAINWAIT:                     
      ldi YH, HIGH(WDV50msCNT)   
      ldi YL, LOW(WDV50msCNT)    
      rcall WDELAY               
                                 
  END:
 	   RJMP  MAIN_LOOP         